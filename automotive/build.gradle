/*
SPDX-FileCopyrightText: 2021 MoleMan1024 <moleman1024dev@gmail.com>
SPDX-License-Identifier: GPL-3.0-or-later
*/
plugins {
    id "com.android.application"
    id "kotlin-android"
    id "kotlin-kapt"
    id "jacoco"
    id "org.jetbrains.kotlin.plugin.serialization" version "$kotlinVersion"
    id "com.google.gms.google-services"
    id "com.google.firebase.crashlytics"
}

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        manifestPlaceholders
        applicationId "de.moleman1024.audiowagon"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionName "2.5.7"
        // major * 10000 + minor * 100 + patch
        versionCode 20507
        resValue "string", "VERSION_NAME", versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.debug
        manifestPlaceholders["requestLegacyExternalStorage"] = "false"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        externalNativeBuild {
            cmake {
                abiFilters "arm64-v8a", "armeabi-v7a", "x86", "x86_64"
            }
        }
    }

    buildTypes {
        debug {
            manifestPlaceholders["requestLegacyExternalStorage"] = "true"
        }
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
        emulatorSDCard {
            initWith debug
            signingConfig signingConfigs.debug
        }
    }

    sourceSets {
        // for testing Android Room database migrations
        getByName("androidTest").assets.srcDir("$projectDir/schemas")

        main {
            java {
                // libusb/usb4java is not used right now as it did not improve performance
                exclude "**/LibusbAndroidUSBCommunicator.kt"
            }
        }
    }

    packagingOptions {
        resources {
            excludes += ['META-INF/spring.factories', 'META-INF/spring.handlers', 'META-INF/spring.schemas',
                         'META-INF/spring.tooling', 'META-INF/license.txt', 'META-INF/notice.txt']
        }
    }

    namespace "de.moleman1024.audiowagon"

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
        ndkVersion "23.1.7779620"
    }

    /* libusb / usb4java is not being used right now
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }
    */
}

dependencies {
    def androidxTestVersion = "1.5.0"
    def kotlinxSerializationVersion = "1.3.0"
    def mockitoVersion = "3.11.1"
    def roomVersion = "2.5.2"

    implementation "com.google.android.material:material:1.9.0"
    implementation "androidx.preference:preference-ktx:1.2.1"
    implementation "androidx.media:media:1.6.0"
    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:$kotlinxSerializationVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinxSerializationVersion"
    // Firebase requires a file google-services.json that contains Firebase secrets, not uploaded to version control
    implementation 'com.google.firebase:firebase-crashlytics-ktx:18.4.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.6.4'

    // junit4 for local unit tests
    testImplementation "junit:junit:4.13.2"
    testImplementation "androidx.test:core:$androidxTestVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"

    // junit4 for instrumented tests on device/emulator
    debugImplementation "androidx.test:core:$androidxTestVersion"
    androidTestImplementation "androidx.test:runner:$androidxTestVersion"
    androidTestImplementation "androidx.test:rules:$androidxTestVersion"
    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"
    debugImplementation "androidx.fragment:fragment-testing:1.6.1"
    androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"
    androidTestImplementation "org.mockito:mockito-android:$mockitoVersion"
    androidTestImplementation "org.springframework:spring-context:5.3.8"
    androidTestImplementation "org.springframework:spring-test:5.3.8"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"
    // in-memory filesystem to easily create different mocked USB drives in testcases
    androidTestImplementation "com.google.jimfs:jimfs:1.2"
    androidTestImplementation files("libs/mp3agic-0.9.2-SNAPSHOT.jar")
}
